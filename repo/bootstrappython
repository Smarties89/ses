#!/bin/pytho
# coding: utf-8

"""bootstraps a Python project with dockerfile, dependency installer, image builder, runwithindocker file. """


from os import mkdir, chdir


def write(f, text):
    with open(f, "w") as fh:
        fh.write(text)


def main(args):
    if len(args) < 1:
        print("Needs atleast project name")
        return 1

    prjname = args[0]

    print("Making {} folder".format(prjname))
    mkdir(prjname)
    chdir(prjname)

    print("Making builddockerimage.py")
    write("builddockerimage.bash", builddockerimage.
            replace("{prjnamelower}", prjname.lower()))

    print("Making Dockerfile")
    write("Dockerfile", dockerfile.replace("{prjnamelower}", prjname.lower()))
 
    print("Making installdependencies.bash")
    write("installdependencies.bash", installdependencies)

    print("Making README.md")
    write("README.md", readme)

    print("Making run.bash")
    write("run.bash", run.replace("{prjname}", prjname))

    print("Making runwithindocker.bash")
    write(
        "runwithindocker.bash",
        runwithindocker.replace("{prjnamelower}", prjname.lower()))

    print("Making main.py")
    write("main.py", mainfile.format(prjname))

    print("Making test folder")
    mkdir("test")
    write("test/__init__.py", "#!/usr/bin/python\n#place, or import, your test here")


builddockerimage = """#!/bin/bash
echo "Now start building your docker image"
sudo docker build -t {prjnamelower} ."""


dockerfile = """FROM  ubuntu:14.04
COPY installdependencies.bash /tmp/installdependencies.bash
RUN bash /tmp/installdependencies.bash
EXPOSE 5000
WORKDIR /src"""


installdependencies = """#!/bin/bash
sudo apt-get update
sudo apt-get install -y python
sudo apt-get install -y ipython python-flake8 pychecker python-requests git"""


run = """#!/bin/bash
echo "Running your {prjname} project"
python main.py"""


runwithindocker = """#!/bin/bash

sudo docker run -t -i --rm -v ${PWD}:/src {prjnamelower} bash run.bash"""


mainfile = '''#!/bin/python
# coding: utf-8

""" Docstring """

__author__ = "Author1, and Author2"
__copyright__ = "Copyright 2015, The Awesome project"
__credits__ = ["Author1", "Author"],
__license__ = "GPL"
__version__ = "0.1"
__maintainer__ = ""
__email__ = ""
__status__ = ""  # of code.

import logging


log = logging.getLogger("{}")


# TODO: Overwrite.
def debug():
    return True

if debug():
    logging.basicConfig()
    log.setLevel(logging.DEBUG)
else:
    logging.basicConfig(filename="mylogs.txt")


def main():
    raise NotImplementedError()

if __name__ == "__main__":
    main()'''

readme = """Congratulation with your new project!

Quick start
===========

Each file have different responsibilities. If you just want to start c/p this into your console:

bash builddockerimage.bash
bash runwithindocker.bash


Workflow
========

Run *bash builddockerimage.bash** to create a image.
Run **bash runwithindocker.bash** to run your project.
When you have more dependencies, change the **installdependencies.bash**, and rebuild the image with **bash builddockerimage.bash**.
Now you can run *runwithindocker.bash* again.

Files
=====

This bootstrap created several files, each with their own purpose:

- **builddockerimage.bash** - Creates a docker image for this project.
- **Dockerfile** - Contains the information about how to build the docker image.
- **installdependencies.bash** - Installs depedencies. Can be used on host or inside the docker image.
- **README.md** - contains this text.
- **run.bash** - runs the project, however not in the docker.
- **runwithindocker.bash** - runs **run.bash** inside an instance of the docker image."""
