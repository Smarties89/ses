#!/usr/bin/python
# coding: utf-8
import logging
from sys import argv
import urllib2
import tempfile
from os.path import exists
import imp
from json import loads as jsondecode

log = logging.getLogger("ses")
# repos has to start with http:// or https://
repos = [
    "http://localhost:6005/",
    "https://sunday.zone/ses/",
    "http://sunday.zone/ses/"
]


def debug():
    return False


if debug():
    logging.basicConfig()
    log.setLevel(logging.DEBUG)
else:
    logging.basicConfig()
    log.setLevel(logging.INFO)


# The only reason why implementing this instead of using python-request
# - or other fancy http libs - is to avoid any external libraries, so
# that it can easily be installed.
def httpdownload(url):
    try:
        response = urllib2.urlopen(url)
        if response.getcode() != 200:
            return None
        return response.read()
    except Exception:
        log.debug("'{}' not found.".format(url))
        return None
    # TODO: Figure out what exactly urlopen can give of exceptions,
    # and print out better error messages.


def getarg(i):
    try:
        return argv[i]
    except:
        return None


def getrestofargs(i):
    try:
        return argv[i:]
    except:
        return []


def betterexec(snippet):
    """ This takes a snippet string and import it as a file """
    snippetfile = tempfile.NamedTemporaryFile()
    snippetfile.write(snippet)
    snippetfile.flush()
    obj = imp.load_source("name", snippetfile.name)
    snippetfile.close()
    return obj


def getsnippet(torun):
    for repo in repos:
        print("Trying repository '{}'".format(repo))
        if not repo.endswith("/"):
            repo += "/"
        snippet = httpdownload(repo + torun)

        if snippet is None:
            log.debug("Snippet not found.")
        else:
            print("FOUND  {} snippet!".format(torun))
            return snippet

    return None


def run(snippetname, snippetargs):
    snippet = getsnippet(snippetname)
    if snippet is None:
        print("Could not find snippet.")
        return

    print("Running snippet..")
    betterexec(snippet).main(snippetargs)


def info(snippetname):
    snippet = getsnippet(snippetname)
    if snippet is None:
        print("Could not find snippet.")
        return

    print(betterexec(snippet).__doc__)


def listsnippets():
    totalindex = []

    # Getting them
    for repo in repos:
        index = httpdownload(repo + "index")
        if index is None:
            continue
        index = jsondecode(index)

        # Adding to totalindex, unles already there.
        for snippet in index:
            if not snippet in totalindex:
                totalindex.append(snippet)

    # Showing them
    for snippet in totalindex:
        print("{name} - {description}".format(**snippet))


def downloadsnippet(snippetname):
    if exists(snippetname + ".py"):
        print("File '{}' already exists. Please remove or move the file before downloading snippet.".
                format(snippetname + ".py"))
        return

    snippet = getsnippet(snippetname)
    if snippet is None:
        print("Could not find snippet")
        return

    print("Now writing it to '{}.py'".format(snippetname))
    with open(snippetname + ".py", "w") as f:
        f.write(snippet)


def main():
    cmd = getarg(1)
    if cmd == "run":
        run(getarg(2), getrestofargs(3))

    elif cmd == "info":
        info(getarg(2))

    elif cmd == "list":
        listsnippets()

    elif cmd == "pull":
        downloadsnippet(getarg(2))

    else:
        print("""usage: ses <command> [<args>]

Supprted commands are:
   run      Run a snippet by the name of args[0] with the arguments args[1:]
   list     List all available snippets from your repositories.
   info     Finds information about the snippet named args[0].
   pull     Get the snippet and save it as <snippetname>.py
   help     Shows this text

Examples:
  To create a new Go project named MyAwesomeProject, you can type:
     ses run bootstrapgo MyAwesomeProject
 
  If you want to find all snippets named bootstrap you can do
     ses list | grep bootstrap

  Update ses can be done by
     ses run update
  since there is a snippet called update.

See more at https://github.com/Smarties89/ses""")


if __name__ == "__main__":
    main()
